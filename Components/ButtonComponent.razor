@using OnlineCalculator.Extensions
@using OnlineCalculator.Constants
@implements IDisposable
@inject CalculatorScreenValueContainer CalculatorScreenValueContainer
@inject CalculationAnswerContainer CalculationAnswerContainer

<div class="w-1/4 border-r border-b border-indigo-400">
    <button  @onclick="() => ChangeScreenValue(Content)" class="w-full h-16 outline-none focus:outline-none hover:bg-indigo-700 hover:bg-opacity-20 text-white text-opacity-50 text-xl font-light">@Content</button>
</div>

@code {
    
    [Parameter]
    public string? Content { get; set; }
    
    protected override void OnInitialized()
    {
        CalculatorScreenValueContainer.OnChange += StateHasChanged;
    }

    private void ChangeScreenValue(string content)
    {

        

        if (content == EnumerationUtility.GetEnumDescription(CalculatorComponents.Clear))
        {
            CalculatorScreenValueContainer.Property = string.Empty;
            CalculationAnswerContainer.Property = "0";
            var t = CalculatorScreenValueContainer.Property;
            var y = CalculationAnswerContainer.Property;
            var x = t;
            var z = y;
        }
        else{
            CalculatorScreenValueContainer.Property += content;

        }

    }

    public void Dispose()
    {
        CalculatorScreenValueContainer.OnChange -= StateHasChanged;
    }
}