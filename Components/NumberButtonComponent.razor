@using OnlineCalculator.Extensions
@using System.Globalization
@implements IDisposable
@inject CalculatorScreenValueContainer CalculatorScreenValueContainer
@inject CalculationAnswerContainer CalculationAnswerContainer
@inject CalculationDoneBeforeContainer CalculationDoneBeforeContainer

<div class="w-1/4 border-r border-b border-indigo-400">
    <button  @onclick="() => ChangeScreenValue(Content)" class="w-full h-16 outline-none focus:outline-none hover:bg-indigo-700 hover:bg-opacity-20 text-white text-xl font-light">@Content</button>
</div>

@code {
    
    [Parameter]
    public string? Content { get; set; }

    
    protected override void OnInitialized()
    {
        CalculatorScreenValueContainer.OnChange += StateHasChanged;
    }

    private void ChangeScreenValue(string content)
    {
        
        CalculatorScreenValueContainer.Property += content;
        
        if (string.IsNullOrEmpty(CalculationAnswerContainer.Property) && !CalculationDoneBeforeContainer.Property)
        {

            var response = CalculatorScreenValueContainer.Property.GetAnswer();
            
            if (response is not null)
            {
                CalculationAnswerContainer.Property = response.ToString();
            }
        }
        else
        {
            CalculationAnswerContainer.Property = CalculatorScreenValueContainer.Property.GetSuccessiveAnswers(decimal.Parse(CalculationAnswerContainer.Property)).ToString();
        }
        
    }

    public void Dispose()
    {
        CalculatorScreenValueContainer.OnChange -= StateHasChanged;
    }
}